# Agricultural AI System - Environment Configuration
# Copy this file to .env and fill in your actual values

# =============================================================================
# DATABASE CONFIGURATION
# =============================================================================
# MongoDB connection URI - replace with your MongoDB instance
MONGODB_URI=mongodb://localhost:27017

# Database name for the agricultural AI system
MONGODB_DATABASE=agricultural_ai

# =============================================================================
# EXTERNAL API KEYS
# =============================================================================

# Weather API Configuration
# Get your API key from https://openweathermap.org/api
WEATHER_API_KEY=your_openweathermap_api_key_here
WEATHER_API_BASE_URL=https://api.openweathermap.org/data/2.5

# Market Data API Configuration  
# For Indian agricultural market data from data.gov.in
MARKET_API_KEY=your_market_data_api_key_here
MARKET_API_BASE_URL=https://api.data.gov.in/resource

# Satellite Imagery API Configuration
# Get API access from AgroMonitoring or similar service
SATELLITE_API_KEY=your_satellite_api_key_here
SATELLITE_API_BASE_URL=http://api.agromonitoring.com/agro/1.0

# Pest and Disease Management API
# Configure based on your pest management data provider
PEST_API_KEY=your_pest_management_api_key_here
PEST_API_BASE_URL=https://api.pestnet.org/v1

# Government Schemes API Configuration
# For accessing government agricultural schemes data
SCHEMES_API_KEY=your_government_schemes_api_key_here
SCHEMES_API_BASE_URL=https://api.gov.in/schemes

# =============================================================================
# SYSTEM CONFIGURATION
# =============================================================================

# Debug mode - set to 'false' in production
DEBUG=true

# Logging level (DEBUG, INFO, WARNING, ERROR, CRITICAL)
LOG_LEVEL=INFO

# Maximum number of worker threads
MAX_WORKERS=5

# Cache TTL in minutes
CACHE_TTL_MINUTES=60

# =============================================================================
# SERVER CONFIGURATION
# =============================================================================

# Server host - use 0.0.0.0 to accept connections from any IP
HOST=0.0.0.0

# Server port
PORT=8000

# Enable auto-reload for development (set to 'false' in production)
RELOAD=false

# =============================================================================
# SECURITY CONFIGURATION  
# =============================================================================

# Secret key for JWT tokens and session management
# Generate a secure key: python -c "import secrets; print(secrets.token_urlsafe(32))"
SECRET_KEY=your_secret_key_here

# JWT token expiration time in minutes
JWT_EXPIRATION_MINUTES=1440

# =============================================================================
# NOTIFICATION CONFIGURATION (OPTIONAL)
# =============================================================================

# SMS Configuration (Twilio)
# TWILIO_ACCOUNT_SID=your_twilio_account_sid
# TWILIO_AUTH_TOKEN=your_twilio_auth_token
# TWILIO_FROM_NUMBER=+1234567890

# Email Configuration (SendGrid)
# SENDGRID_API_KEY=your_sendgrid_api_key
# SENDGRID_FROM_EMAIL=noreply@yourdomain.com

# =============================================================================
# CLOUD STORAGE CONFIGURATION (OPTIONAL)
# =============================================================================

# AWS S3 Configuration
# AWS_ACCESS_KEY_ID=your_aws_access_key
# AWS_SECRET_ACCESS_KEY=your_aws_secret_key
# AWS_REGION=us-west-2
# S3_BUCKET_NAME=your-agricultural-ai-bucket

# Google Cloud Storage Configuration
# GOOGLE_CLOUD_PROJECT=your-gcp-project-id
# GOOGLE_APPLICATION_CREDENTIALS=/path/to/service-account-key.json
# GCS_BUCKET_NAME=your-gcs-bucket

# =============================================================================
# MESSAGE QUEUE CONFIGURATION (OPTIONAL)
# =============================================================================

# Redis Configuration (for Celery task queue)
# REDIS_URL=redis://localhost:6379/0

# Celery Configuration
# CELERY_BROKER_URL=redis://localhost:6379/0
# CELERY_RESULT_BACKEND=redis://localhost:6379/0

# =============================================================================
# MONITORING AND ANALYTICS (OPTIONAL)
# =============================================================================

# Application monitoring (e.g., New Relic, DataDog)
# NEW_RELIC_LICENSE_KEY=your_new_relic_license_key
# DATADOG_API_KEY=your_datadog_api_key

# Analytics tracking
# GOOGLE_ANALYTICS_ID=GA-XXXXXXXXX-X

# =============================================================================
# DEVELOPMENT CONFIGURATION
# =============================================================================

# Test database (for running tests)
TEST_MONGODB_URI=mongodb://localhost:27017/agricultural_ai_test

# API rate limiting for development
DEV_RATE_LIMIT_REQUESTS=1000
DEV_RATE_LIMIT_WINDOW=3600

# =============================================================================
# PRODUCTION OVERRIDES
# =============================================================================
# When deploying to production, create a separate .env.prod file
# and override these values:

# MONGODB_URI=mongodb://username:password@prod-server:27017/agricultural_ai?authSource=admin
# DEBUG=false  
# LOG_LEVEL=WARNING
# HOST=0.0.0.0
# PORT=8000
# RELOAD=false

# =============================================================================
# SAMPLE VALUES FOR QUICK TESTING
# =============================================================================
# Uncomment and use these sample values for initial testing
# (Replace with real API keys for production use)

# WEATHER_API_KEY=sample_openweathermap_key_get_real_one_from_openweathermap
# MARKET_API_KEY=sample_market_key_register_at_data_gov_in
# SATELLITE_API_KEY=sample_satellite_key_register_at_agromonitoring
# PEST_API_KEY=sample_pest_key_contact_pest_data_provider
# SCHEMES_API_KEY=sample_schemes_key_check_government_apis